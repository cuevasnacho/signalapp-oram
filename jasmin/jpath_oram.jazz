require "path_oram.jinc"

export
fn oram_access_read_jazz(
  #transient reg u64 oram,
  #secret reg u64 block_id,
  #transient reg u64 out_data
)
{
  _ = #init_msf();

  oram = oram;
  block_id = block_id;
  out_data = out_data;
  _oram_access_read(oram, block_id, out_data);
}

export
fn oram_access_write_jazz(
  #transient reg u64 oram,
  #secret reg u64 block_id,
  #transient reg u64 in_data
)
{
  _ = #init_msf();

  oram = oram;
  block_id = block_id;
  in_data = in_data;
  _oram_access_write(oram, block_id, in_data);
}

export
fn oram_clear_jazz(
  #transient reg u64 oram
)
{
  #msf reg u64 msf;
  msf = #init_msf();
  msf = oram_clear(oram, msf);
}

export
fn oram_allocate_block_jazz(
  #transient reg u64 oram
) -> reg u64
{
  reg u64 r;
  #msf reg u64 msf;
  msf = #init_msf();

  r = oram_allocate_block(oram, msf);
  return r;
}

export
fn oram_allocate_contiguous_jazz(
  #transient reg u64 oram,
  reg u64 num_blocks
) -> reg u64
{
  reg u64 r;
  #msf reg u64 msf;
  msf = #init_msf();

  r = oram_allocate_contiguous(oram, num_blocks, msf);
  return r;
}
